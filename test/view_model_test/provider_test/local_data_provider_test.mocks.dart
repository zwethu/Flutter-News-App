// Mocks generated by Mockito 5.4.2 from annotations
// in news_app/test/view_model_test/provider_test/local_data_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:hive/hive.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:news_app/model/hive/article_box.dart' as _i4;
import 'package:news_app/model/repository/bookmark_article_repo.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBox_0<E> extends _i1.SmartFake implements _i2.Box<E> {
  _FakeBox_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BookmarkArticleRepoImp].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookmarkArticleRepoImp extends _i1.Mock
    implements _i3.BookmarkArticleRepoImp {
  MockBookmarkArticleRepoImp() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Box<_i4.ArticleBox?> get box => (super.noSuchMethod(
        Invocation.getter(#box),
        returnValue: _FakeBox_0<_i4.ArticleBox?>(
          this,
          Invocation.getter(#box),
        ),
      ) as _i2.Box<_i4.ArticleBox?>);

  @override
  List<_i4.ArticleBox?> getArticles(String? topic) => (super.noSuchMethod(
        Invocation.method(
          #getArticles,
          [topic],
        ),
        returnValue: <_i4.ArticleBox?>[],
      ) as List<_i4.ArticleBox?>);

  @override
  void saveInHive(_i4.ArticleBox? article) => super.noSuchMethod(
        Invocation.method(
          #saveInHive,
          [article],
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i4.ArticleBox?> removeFromHive(_i4.ArticleBox? article) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromHive,
          [article],
        ),
        returnValue: <_i4.ArticleBox?>[],
      ) as List<_i4.ArticleBox?>);
}
